//C++
class Solution {
public:
    int romanToInt(string s) {
        unordered_map<char,int> mymap{
        {'I',1},
        {'V',5},
        {'X',10},
        {'L',50},
        {'C',100},
        {'D',500},
        {'M',1000},
        };
        int value = 0;
        for(int i=0;i<s.size();++i){
            if(mymap[s[i]] < mymap[s[i+1]])
                value -= mymap[s[i]];
            else
                value += mymap[s[i]];
        }
        return value;
    }
};

//Java
import java.util.HashMap;
import java.util.Map;

class Solution {
    public int romanToInt(String s) {
        Map<Character, Integer> romanMap = new HashMap<>();
        romanMap.put('I', 1);
        romanMap.put('V', 5);
        romanMap.put('X', 10);
        romanMap.put('L', 50);
        romanMap.put('C', 100);
        romanMap.put('D', 500);
        romanMap.put('M', 1000);

        int value = 0;
        for (int i = 0; i < s.length(); i++) {
            if (i < s.length() - 1 && romanMap.get(s.charAt(i)) < romanMap.get(s.charAt(i + 1))) {
                value -= romanMap.get(s.charAt(i));
            } else {
                value += romanMap.get(s.charAt(i));
            }
        }

        return value;
    }
}

#Python

class Solution:
    def romanToInt(self, s: str) -> int:
        roman_map = {
            'I': 1,
            'V': 5,
            'X': 10,
            'L': 50,
            'C': 100,
            'D': 500,
            'M': 1000
        }
        
        value = 0
        for i in range(len(s)):
            if i < len(s) - 1 and roman_map[s[i]] < roman_map[s[i + 1]]:
                value -= roman_map[s[i]]
            else:
                value += roman_map[s[i]]
        
        return value
